name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Checkout rosettasciio
        uses: actions/checkout@v3
        with:
          repository: ericpre/rosettasciio
          path: rosettasciio
          ref: numba_h5py_optional

      - name: Checkout RosettaSciIO
        # Needs to fetch the tags from upstream to get the
        # correct version with setuptools_scm
        run: |
          cd rosettasciio
          git remote add upstream https://github.com/hyperspy/rosettasciio.git
          git fetch --prune --unshallow
          git fetch upstream --tags
      - name: Build RosettaSciIO
        # Remove when a pure python wheels is available on pypi
        run: |
          cd rosettasciio
          python -m pip install pipx
          pipx run build --wheel --outdir ../content
        env:
          DISABLE_C_EXTENTIONS: 1

      - name: Checkout HyperSpy
        uses: actions/checkout@v3
        with:
          repository: ericpre/hyperspy
          path: hyperspy
          ref: pyodide
      - name: Build HyperSpy
        # Remove when a pure python wheels is available on pypi
        run: |
          cd hyperspy
          python -m pip install pipx
          pipx run build --wheel --outdir ../content

      - name: Install the dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Build the JupyterLite site
        run: |
          cp README.md content
          jupyter lite build --contents content --output-dir dist
      - name: ls content
        run: |
          ls content
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
